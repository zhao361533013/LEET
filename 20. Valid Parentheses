Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true

class Solution {
    public boolean isValid(String s) {
        HashMap <Character, Character> mp = new HashMap<>();
        mp.put('(',')');
        mp.put('{','}');
        mp.put('[',']');
        Stack <Character> ld = new Stack<>();
        
        for (int i = 0 ; i<s.length();i++){
            char m = s.charAt(i);
            if (mp.keySet().contains(m)){
                ld.push(m);
            }else if(mp.values().contains(m)) {
                if (!ld.empty()&&mp.get(ld.peek()) == m){
                    ld.pop();
                }
                else {
                    return false;
                }
            }
        }
        return ld.empty();
    }
}


栈的应用
