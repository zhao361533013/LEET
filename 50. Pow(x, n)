Implement pow(x, n), which calculates x raised to the power n (xn).

Example 1:

Input: 2.00000, 10
Output: 1024.00000
Example 2:

Input: 2.10000, 3
Output: 9.26100
Example 3:

Input: 2.00000, -2
Output: 0.25000
Explanation: 2-2 = 1/22 = 1/4 = 0.25
Note:

-100.0 < x < 100.0
n is a 32-bit signed integer, within the range [−231, 231 − 1]

class Solution {
    public double myPow(double x, int n) {
        if(n==Integer.MIN_VALUE){
            double temp = myPow(x, n>>1);
            return temp*temp;
        }
        if (n == 0) return 1;
        if (n < 0){
           return 1/myPow(x,-n);
        }
        double ld = myPow(x,n/2);
        if (n%2 == 0) return ld*ld;
        return ld*ld*x;
    }
}
开始是使用for循环的解法 时间复杂度是N2  这里考虑是用二分法来做。
https://blog.csdn.net/u014755255/article/details/50193463
